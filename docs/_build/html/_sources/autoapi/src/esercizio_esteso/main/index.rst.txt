src.esercizio_esteso.main
=========================

.. py:module:: src.esercizio_esteso.main

.. autoapi-nested-parse::

   Main entry point for the Esercizio Esteso CrewAI application.

   This module serves as the primary entry point for the CrewAI-based multi-agent
   system that handles documentation generation through specialized AI crews and flows.

   .. rubric:: Examples

   Run the application directly:
       $ python main.py

   Or import and use programmatically:
       >>> from main import run_flow, plot_flow
       >>> result = run_flow()
       >>> plot_flow()

   .. rubric:: Notes

   The module suppresses SyntaxWarning from the pysbd module to prevent
   unnecessary warnings during execution.



Functions
---------

.. autoapisummary::

   src.esercizio_esteso.main.plot_flow
   src.esercizio_esteso.main.run_flow


Module Contents
---------------

.. py:function:: plot_flow()

   Generate and display flow visualization.

   Creates a visual representation of the CrewAI flow structure,
   showing the relationships between different agents, tasks, and
   the overall workflow architecture.

   :raises Exception: If an error occurs during visualization generation, with details
       about the specific failure wrapped in a descriptive message.

   .. rubric:: Examples

   >>> plot_flow()
   >>> print("Flow visualization generated")

   .. rubric:: Notes

   This function is useful for understanding the flow structure and
   debugging the agent interaction patterns. The visualization output
   format depends on the underlying plotting implementation.


.. py:function:: run_flow()

   Execute the documentation generation flow.

   Initiates the main CrewAI flow that coordinates multiple AI agents
   to generate comprehensive documentation based on RAG research and
   structured templates.

   :returns: The result object from the flow execution, typically containing
             the generated documentation and metadata about the process.
   :rtype: Any

   :raises Exception: If an error occurs during flow execution, with details about
       the specific failure wrapped in a descriptive message.

   .. rubric:: Examples

   >>> result = run_flow()
   >>> print("Flow completed successfully")

   .. rubric:: Notes

   This function acts as a wrapper around the flow_kickoff function
   from the flow_documentation module, providing error handling and
   a consistent interface.


