src.esercizio_esteso.tools.vision_tools
=======================================

.. py:module:: src.esercizio_esteso.tools.vision_tools

.. autoapi-nested-parse::

   Vision and Image Generation Tools for CrewAI Multi-Agent System.

   This module provides tools for image generation and visual content creation
   using DALL-E API integration. The tools enable agents to create visual
   content based on textual descriptions.

   Classes
   -------
   MyCustomToolInput : BaseModel
       Pydantic model defining the input schema for vision tools.
   DallETool : BaseTool
       Tool for generating images from textual descriptions using DALL-E.

   .. rubric:: Notes

   The tools require proper Azure OpenAI configuration and DALL-E API access.
   The generated images are high-quality and suitable for various applications.



Classes
-------

.. autoapisummary::

   src.esercizio_esteso.tools.vision_tools.DallETool
   src.esercizio_esteso.tools.vision_tools.MyCustomToolInput


Module Contents
---------------

.. py:class:: DallETool(/, **data: Any)

   Bases: :py:obj:`crewai.tools.BaseTool`


   DALL-E image generation tool.

   This tool provides image generation capabilities using the DALL-E API,
   allowing agents to create high-quality images from textual descriptions.
   The tool integrates with Azure OpenAI services for robust image generation.

   .. attribute:: name

      Tool identifier used by CrewAI agents.

      :type: str

   .. attribute:: description

      Detailed description of image generation capabilities.

      :type: str

   .. attribute:: args_schema

      Pydantic model defining the input schema.

      :type: Type[BaseModel]

   .. method:: generate_image(description: str)

      Creates an image based on the provided textual description.


   .. rubric:: Examples

   >>> dalle = DallETool()
   >>> image_url = dalle.generate_image("A robot working in a garden")

   .. rubric:: Notes

   The tool requires proper DALL-E API configuration and handles errors
   gracefully to ensure reliable operation within agent workflows.


.. py:class:: MyCustomToolInput(/, **data: Any)

   Bases: :py:obj:`pydantic.BaseModel`


   Input schema for vision tools.

   Defines the input format for vision-related tools, ensuring proper
   validation and type checking for image generation requests.

   .. attribute:: question

      The description or prompt for image generation. Should be detailed
      and descriptive to achieve the best results from DALL-E.

      :type: str

   .. rubric:: Examples

   >>> input_data = MyCustomToolInput(
   ...     question="A futuristic cityscape with flying cars at sunset"
   ... )


